% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngraph.R
\name{prune_in_volume}
\alias{prune_in_volume}
\alias{prune_in_volume.neuron}
\alias{prune_in_volume.neuronlist}
\title{Prune neuron(s) within a volume defined by a 3D mesh}
\usage{
prune_in_volume(x, surf, neuropil = NULL, invert = TRUE, ...)

\method{prune_in_volume}{neuron}(x, surf, neuropil = NULL, invert = TRUE, ...)

\method{prune_in_volume}{neuronlist}(x, surf, neuropil = NULL, invert = TRUE, ...)
}
\arguments{
\item{x}{a \code{neuron} object}

\item{surf}{An \code{\link{hxsurf}} or \code{\link[rgl]{mesh3d}} object, or
any object coercible into \code{\link[rgl]{mesh3d}} by
\code{\link{as.mesh3d}}.}

\item{neuropil}{Character vector specifying a subset of the \code{surf}
object. This is only relevant when \code{surf} is of class
\code{\link{hxsurf}}. If NULL (default), then the full object given as
\code{surf} will be used for the pruning.}

\item{invert}{Logical when \code{TRUE} indicates that points inside the mesh
are kept.}

\item{...}{Additional arguments for methods (eventually passed to
\code{\link{prune_vertices}}) surface should be pruned.}
}
\value{
A pruned neuron/neuronlist object
}
\description{
Prune neuron(s) within a volume defined by a 3D mesh
}
\details{
Prune a neuron to be within, or to exclude arbour within, a 3D
  object that can be coerced into the mesh3d data structure
}
\examples{
\dontrun{
### Example requires the package nat.flybrains
LH_arbour = prune_in_volume(x = Cell07PNs, surf = nat.flybrains::IS2NP.surf,
  neuropil = "LH_L", OmitFailures = TRUE)
}
}
\seealso{
\code{\link{as.neuron.ngraph}}, \code{\link{subset.neuron}},
  \code{\link{prune.neuron}}, \code{\link{prune}}
}
