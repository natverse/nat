% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wire3d.R
\name{wire3d}
\alias{wire3d}
\alias{wire3d.hxsurf}
\alias{wire3d.mesh3d}
\alias{wire3d.shapelist3d}
\title{Wire frame plots}
\usage{
wire3d(
  x,
  ...,
  add = TRUE,
  gridlines = FALSE,
  plotengine = getOption("nat.plotengine")
)

\method{wire3d}{hxsurf}(x, Regions = NULL, ...)

\method{wire3d}{mesh3d}(x, ..., front = "lines", back = "lines")

\method{wire3d}{shapelist3d}(x, override = TRUE, ...)
}
\arguments{
\item{x}{object of type 'mesh3d' (triangular mesh or quad mesh), 'hxsurf' or 'shapelist3d'}

\item{...}{Additional arguments passed to \code{\link[rgl]{wire3d}} or}

\item{add}{whether to add objects to an existing plot}

\item{gridlines}{Whether to display gridlines when using plotly as the backend plotting
engine (default: \code{FALSE})
\code{\link[plotly]{add_trace} depending on the @param plotengine option choosen}}

\item{plotengine}{Whether to use plotting backend of 'rgl' or 'plotly'}

\item{Regions}{When \code{x} is a multi region \code{\link{hxsurf}} object.
Default plots all. Seed \code{\link{as.mesh3d}} for details of how the
argument is handled.}

\item{front}{Material properties for rendering.}

\item{back}{Material properties for rendering.}

\item{override}{should the parameters specified here override those stored in the object?}
}
\description{
This function directs the wireframe plot based on the plotengine backend selected.
}
\examples{
\donttest{
library(alphashape3d)
kcs20.a=ashape3d(xyzmatrix(kcs20), alpha = 10)
plot(kcs20.a)

# convert to mesh3d
kcs20.mesh=as.mesh3d(kcs20.a, meshColor = "edges")

# For plotly..
options(nat.plotengine = 'plotly')
wire3d(kcs20.mesh,alpha = 0.1, add = FALSE, col = 'blue')

# For rgl..
options(nat.plotengine = 'rgl')
wire3d(kcs20.mesh,alpha = 0.1, add = FALSE, col = 'blue')
}
}
\seealso{
\code{\link[rgl]{wire3d}}
}
